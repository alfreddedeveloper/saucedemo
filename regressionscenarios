const { Builder, By, Key, until } = require('selenium-webdriver');
const assert = require('assert');
const fs = require('fs');
const csv = require('csv-parser');

describe('Sauce Demo Test Cases', function() {
    let driver;

    before(async function() {
        driver = await new Builder().forBrowser('chrome').build();
    });

    after(async function() {
        await driver.quit();
    });

    it('1. Open https://www.saucedemo.com/ website', async function() {
        await driver.get('https://www.saucedemo.com/');
        await driver.wait(until.titleIs('Swag Labs'), 5000);
    });

    it('2. Login to webapp with userID: standard_user and password: secret_sauce', async function() {
        await driver.findElement(By.id('user-name')).sendKeys('standard_user');
        await driver.findElement(By.id('password')).sendKeys('secret_sauce', Key.RETURN);
        await driver.wait(until.urlIs('https://www.saucedemo.com/inventory.html'), 5000);
    });

    it('3. Add items to cart', async function() {
        const items = ["Sauce Labs Backpack", "Sauce Labs Bike Light", "Sauce Labs Bolt T-Shirt", "MRF Bat"];
        for (const item of items) {
            await driver.findElement(By.xpath(`//div[text()='${item}']/ancestor::div[@class='inventory_item']//button[text()='Add to cart']`))
                .click();
        }
    });

    it('4. Make sure items are present in testData.csv file', async function() {
        let testData = [];
        fs.createReadStream('testData.csv')
            .pipe(csv())
            .on('data', (row) => {
                testData.push(row.items);
            })
            .on('end', () => {
                for (const item of testData) {
                    assert.ok(items.includes(item), `${item} not found in landing page.`);
                }
            });
    });

    it('6. Go to cart', async function() {
        await driver.findElement(By.className('shopping_cart_link')).click();
        await driver.wait(until.urlIs('https://www.saucedemo.com/cart.html'), 5000);
    });

    it('7. Remove "Sauce Labs Bike Light" from item list', async function() {
        await driver.findElement(By.xpath('//div[text()="Sauce Labs Bike Light"]/ancestor::div[@class="cart_item"]//button[text()="REMOVE"]'))
            .click();
    });

    it('8. Click "Checkout"', async function() {
        await driver.findElement(By.id('checkout')).click();
    });

    it('9. Provide First Name, Last Name, Zip Code', async function() {
        await driver.findElement(By.id('first-name')).sendKeys('John');
        await driver.findElement(By.id('last-name')).sendKeys('Doe');
        await driver.findElement(By.id('postal-code')).sendKeys('12345');
    });

    it('10. Click "Continue"', async function() {
        await driver.findElement(By.id('continue')).click();
    });

    it('11. Click "Sauce Labs Bolt T-Shirt" in checkout, remove the item', async function() {
        await driver.findElement(By.xpath('//div[text()="Sauce Labs Bolt T-Shirt"]/ancestor::div[@class="cart_item"]//button[text()="REMOVE"]'))
            .click();
    });

    it('12. Click on the cart', async function() {
        await driver.findElement(By.className('shopping_cart_link')).click();
    });

    it('13. Click "Checkout"', async function() {
        await driver.findElement(By.id('checkout')).click();
    });

    it('14. Provide First Name, Last Name, Zip Code', async function() {
        await driver.findElement(By.id('first-name')).sendKeys('Alfred');
        await driver.findElement(By.id('last-name')).sendKeys('Mainja');
        await driver.findElement(By.id('postal-code')).sendKeys('12345');
    });

    it('15. Check total price and proceed accordingly', async function() {
        const totalPrice = await driver.findElement(By.className('summary_total_label')).getText();
        const totalPriceValue = parseFloat(totalPrice.replace('$', ''));
        if (totalPriceValue < 40.00) {
            await driver.findElement(By.id('finish')).click();
        } else {
            await driver.findElement(By.id('cancel')).click();
        }
    });

    it('16. Verify completion message after clicking "Finish"', async function() {
        const completionMessage = await driver.findElement(By.className('complete-header')).getText();
        assert.strictEqual(completionMessage, 'THANK YOU FOR YOUR ORDER');
    });

    it('17. Click "Back Home" to go to home page', async function() {
        await driver.findElement(By.className('bm-burger-button')).click();
        await driver.findElement(By.id('inventory_sidebar_link')).click();
    });

    it('18. Click on 3 lines in left-hand side top, then click Log Out', async function() {
        await driver.findElement(By.className('bm-burger-button')).click();
        await driver.findElement(By.id('logout_sidebar_link')).click();
        await driver.wait(until.urlIs('https://www.saucedemo.com/'), 5000);
    });
});
